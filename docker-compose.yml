services:
  nginx:
    image: nginx:latest
    container_name: nginx-docker-app-nginx
    volumes:
      - ./front:/var/www/front/
      - ./back/public:/var/www/html/public:ro
      - ./back/storage/app/public:/var/www/html/storage/app/public
      #- ./front/public/images:/var/www/html/public/storage/front:ro
      - ./back/vendor:/var/www/html/vendor
      - ./.ci/nginx-default.conf:/etc/nginx/conf.d/default.conf
    command: bash -c "while true; do sleep 1; done"
    ports:
      - "${APP_PORT:-80}:80"
    networks:
      - sail
    depends_on:
      - laravel.test
      - pgsql
      - react

  laravel.test:
    build:
      context: ./
      dockerfile: ./.ci/back.dockerfile
      args:
        WWWGROUP: '${WWWGROUP}'
        # WWWGROUP: '${WWWGROUP:-20}'
    image: nginx-docker-app-laravel
    container_name: nginx-docker-app-laravel
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    environment:
      WWWUSER: '${WWWUSER}'
      LARAVEL_SAIL: 1
      XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
      XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
      IGNITION_LOCAL_SITES_PATH: '${PWD}'
    volumes:
      - './.env:/var/www/html/.env:ro'
      - './back:/var/www/html'
      - './.ci/php.ini:/usr/local/etc/php/conf.d/php.ini'
    networks:
      - sail
    depends_on:
      - pgsql

  pgsql:
    image: 'postgres:15'
    container_name: nginx-docker-app-db
    ports:
      - '${FORWARD_DB_PORT:-5432}:5432'
    environment:
      PGPASSWORD: '${DB_PASSWORD:-secret}'
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
    volumes:
      - 'sail-pgsql:/var/lib/postgresql/data'
      - './back/vendor/laravel/sail/database/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
    networks:
      - sail
    healthcheck:
      test:
        - CMD
        - pg_isready
        - '-q'
        - '-d'
        - '${DB_DATABASE}'
        - '-U'
        - '${DB_USERNAME}'
      retries: 3
      timeout: 5s

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: phone@mail.com
      PGADMIN_DEFAULT_PASSWORD: secret
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${FORWARD_PGADMIN_PORT:-8090}:80"
    depends_on:
      pgsql:
        condition: service_healthy
    networks:
      - sail
    restart: unless-stopped

  # Elasticsearch Service
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.1
    container_name: elasticsearch
    build:
      context: ./
      dockerfile: ./.ci/elasticsearch.dockerfile
    environment:
      - discovery.type=single-node # might be differ for PROD
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - ELASTIC_USERNAME="elastic"
      - ELASTIC_PASSWORD="phone" # Your password for elastic search
      - node.name=es01
      - cluster.name=es-docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms128m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.security.autoconfiguration.enabled=true
      - xpack.security.enrollment.enabled=true
      - xpack.security.http.ssl.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - sail-elasticsearch:/usr/share/elasticsearch/data
    networks:
      - sail
    ports:
      - "9200:9200"
      - "9300:9300"

  react:
    build:
      context: ./
      dockerfile: ./.ci/front.dockerfile
    image: 'nginx-docker-app-react'
    container_name: nginx-docker-app-front
    ports:
      - '3000:3000'
    volumes:
      - './front:/var/www/front/'
      - './.env:/var/www/front/.env:ro'
    networks:
      - sail
networks:
  sail:
    name: nginx-docker-app-network
    driver: bridge
    external: true
volumes:
  sail-pgsql:
    driver: local
  pgadmin:
    driver: local
  sail-react:
    driver: local
  sail-elasticsearch:
    driver: local
